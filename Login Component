import React, { useState, useContext } from 'react';
import { AuthContext } from './AuthContext';
import { loginUser } from '../../services/auth.service';
import { 
  Box, 
  Button, 
  TextField, 
  Typography, 
  Paper, 
  Divider,
  Alert,
  CircularProgress
} from '@mui/material';
import GoogleIcon from '@mui/icons-material/Google';
import MicrosoftIcon from '@mui/icons-material/Window';
import { styled } from '@mui/material/styles';

const LoginWrapper = styled(Paper)(({ theme }) => ({
  padding: theme.spacing(4),
  maxWidth: 400,
  margin: '0 auto',
  marginTop: theme.spacing(8),
  display: 'flex',
  flexDirection: 'column',
  alignItems: 'center',
  backgroundColor: 'rgba(255, 255, 255, 0.9)',
}));

const Login = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');
  const [loading, setLoading] = useState(false);
  const { login } = useContext(AuthContext);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    setError('');

    // Validate email is a St. Thomas email
    if (!email.endsWith('@stthomas.edu')) {
      setError('Please use your St. Thomas email address.');
      setLoading(false);
      return;
    }

    try {
      const response = await loginUser(email, password);
      login(response.token, response.user);
    } catch (err) {
      setError(err.message || 'Login failed. Please check your credentials.');
    } finally {
      setLoading(false);
    }
  };

  const handleOAuthLogin = (provider) => {
    // Implement OAuth login with Google or Microsoft
    console.log(`Login with ${provider}`);
    // Would redirect to OAuth provider
  };

  return (
    <LoginWrapper elevation={3}>
      <Box 
        component="img" 
        src="/assets/logo.svg" 
        alt="University of St. Thomas Logo" 
        sx={{ height: 80, mb: 2 }}
      />
      <Typography variant="h5" component="h1" gutterBottom>
        UST-ID Digital Campus
      </Typography>
      
      {error && <Alert severity="error" sx={{ width: '100%', mb: 2 }}>{error}</Alert>}
      
      <Box component="form" onSubmit={handleSubmit} sx={{ width: '100%' }}>
        <TextField
          margin="normal"
          required
          fullWidth
          id="email"
          label="St. Thomas Email"
          name="email"
          autoComplete="email"
          autoFocus
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          placeholder="username@stthomas.edu"
        />
        <TextField
          margin="normal"
          required
          fullWidth
          name="password"
          label="Password"
          type="password"
          id="password"
          autoComplete="current-password"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
        />
        <Button
          type="submit"
          fullWidth
          variant="contained"
          sx={{ 
            mt: 3, 
            mb: 2, 
            backgroundColor: '#6A0DAD',
            '&:hover': {
              backgroundColor: '#5A0C93',
            } 
          }}
          disabled={loading}
        >
          {loading ? <CircularProgress size={24} /> : 'Sign In'}
        </Button>
      </Box>
      
      <Divider sx={{ width: '100%', my: 2 }}>OR</Divider>
      
      <Button
        fullWidth
        variant="outlined"
        startIcon={<GoogleIcon />}
        onClick={() => handleOAuthLogin('Google')}
        sx={{ mb: 1 }}
      >
        Sign in with Google
      </Button>
      <Button
        fullWidth
        variant="outlined"
        startIcon={<MicrosoftIcon />}
        onClick={() => handleOAuthLogin('Microsoft')}
      >
        Sign in with Microsoft
      </Button>
    </LoginWrapper>
  );
};

export default Login;
